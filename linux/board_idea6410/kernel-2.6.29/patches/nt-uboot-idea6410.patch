From afa56668aab5920160afffb97622413f3c41950a Mon Sep 17 00:00:00 2001
From: Daniel Sangorrin <daniel.sangorrin@gmail.com>
Date: Thu, 23 Jun 2011 10:20:26 +0900
Subject: [PATCH] new files

---
 board/samsung/smdk6410/config.mk       |    2 +-
 board/samsung/smdk6410/lowlevel_init.S |    2 +-
 cpu/s3c64xx/config.mk                  |    4 +++-
 cpu/s3c64xx/cpu.c                      |   21 +++++++++++++++++----
 cpu/s3c64xx/s3c6410/speed.c            |    1 +
 cpu/s3c64xx/start.S                    |   32 ++++++++++----------------------
 include/configs/smdk6410.h             |   12 ++++++------
 7 files changed, 39 insertions(+), 35 deletions(-)

diff --git a/board/samsung/smdk6410/config.mk b/board/samsung/smdk6410/config.mk
index f6d3847..133b1b0 100644
--- a/board/samsung/smdk6410/config.mk
+++ b/board/samsung/smdk6410/config.mk
@@ -25,6 +25,6 @@
 
 
 ifndef TEXT_BASE
-TEXT_BASE = 0xc7e00000
+TEXT_BASE = 0x57C00000
 endif
 
diff --git a/board/samsung/smdk6410/lowlevel_init.S b/board/samsung/smdk6410/lowlevel_init.S
index 352a7be..54210c7 100644
--- a/board/samsung/smdk6410/lowlevel_init.S
+++ b/board/samsung/smdk6410/lowlevel_init.S
@@ -95,7 +95,7 @@ lowlevel_init:
 	bl nand_asm_init
 #endif
 
-#if 0
+#if 1
 	ldr	r0, =0xff000fff
 	bic	r1, pc, r0		/* r0 <- current base addr of code */
 	ldr	r2, _TEXT_BASE		/* r1 <- original base addr in ram */
diff --git a/cpu/s3c64xx/config.mk b/cpu/s3c64xx/config.mk
index 204e880..bf96653 100644
--- a/cpu/s3c64xx/config.mk
+++ b/cpu/s3c64xx/config.mk
@@ -24,7 +24,9 @@ PLATFORM_RELFLAGS += -fno-strict-aliasing  -fno-common -ffixed-r8 \
 	-msoft-float
 
 # Make ARMv5 to allow more compilers to work, even though its v6.
-PLATFORM_CPPFLAGS += -march=armv5t
+#PLATFORM_CPPFLAGS += -march=armv5t
+PLATFORM_CPPFLAGS += -mcpu=arm1176jz-s -mlittle-endian -msoft-float
+
 # =========================================================================
 #
 # Supply options according to compiler version
diff --git a/cpu/s3c64xx/cpu.c b/cpu/s3c64xx/cpu.c
index 96a064f..bf51eb3 100644
--- a/cpu/s3c64xx/cpu.c
+++ b/cpu/s3c64xx/cpu.c
@@ -125,10 +125,23 @@ int cleanup_before_linux (void)
 	i &= ~(C1_DC | C1_IC);
 	asm ("mcr p15, 0, %0, c1, c0, 0": :"r" (i));
 
-	/* flush I/D-cache */
-	i = 0;
-	asm ("mcr p15, 0, %0, c7, c7, 0": :"r" (i));  /* invalidate both caches and flush btb */
-	asm ("mcr p15, 0, %0, c7, c10, 4": :"r" (i)); /* mem barrier to sync things */
+// 	/* flush I/D-cache */
+// 	i = 0;
+// 	asm ("mcr p15, 0, %0, c7, c7, 0": :"r" (i));  /* invalidate both caches and flush btb */
+// 	asm ("mcr p15, 0, %0, c7, c10, 4": :"r" (i)); /* mem barrier to sync things */
+
+#define Asm		asm volatile
+#define CP15_ICACHE_INVALIDATE() Asm("mcr p15, 0, %0, c7, c5, 0"::"r"(0))
+#define CP15_DCACHE_CLEAN_AND_INVALIDATE() \
+	Asm("mcr p15, 0, %0, c7, c14, 0":: "r"(0))
+#define CP15_DATA_MEMORY_BARRIER() Asm("mcr p15, 0, %0, c7, c10, 5"::"r" (0));
+#define CP15_DATA_SYNC_BARRIER() Asm("mcr p15, 0, %0, c7, c10, 4"::"r"(0))
+
+	CP15_ICACHE_INVALIDATE();
+	CP15_DCACHE_CLEAN_AND_INVALIDATE();
+	CP15_DATA_MEMORY_BARRIER();
+	CP15_DATA_SYNC_BARRIER();
+
 	return(0);
 }
 
diff --git a/cpu/s3c64xx/s3c6410/speed.c b/cpu/s3c64xx/s3c6410/speed.c
index 05d662c..d7b4541 100755
--- a/cpu/s3c64xx/s3c6410/speed.c
+++ b/cpu/s3c64xx/s3c6410/speed.c
@@ -124,6 +124,7 @@ int print_cpuinfo(void)
 
 	// fusq add company info
 	printf("****************************************\r\n");
+	printf("**    SafeG Non-Trust u-boot           \n");
 	printf("**    UT-S3C6410/idea6410 nandboot v2.0 \n");
 	printf("**    ShenZhen Urbetter Technology    \r\n");
 	printf("**    Http://www.urbetter.com	      \r\n");	
diff --git a/cpu/s3c64xx/start.S b/cpu/s3c64xx/start.S
index 1e1952e..f60f044 100644
--- a/cpu/s3c64xx/start.S
+++ b/cpu/s3c64xx/start.S
@@ -133,14 +133,19 @@ FIQ_STACK_START:
  * the actual reset code
  */
 
+#define UINT_C(val)		(val)
+#define CPSR_SVC      UINT_C(0x13)
+#define CPSR_IRQ_BIT  UINT_C(0x80)
+#define CPSR_FIQ_BIT  UINT_C(0x40)
+#define CPSR_INTLOCK  (CPSR_FIQ_BIT|CPSR_IRQ_BIT)
+
+    .code 32
+    .align 2
 reset:
 	/*
 	 * set the cpu to SVC32 mode
 	 */
-	mrs	r0,cpsr
-	bic	r0,r0,#0x1f
-	orr	r0,r0,#0xd3
-	msr	cpsr,r0
+    msr  cpsr, #(CPSR_SVC|CPSR_INTLOCK)
 
 /*
  *************************************************************************
@@ -157,27 +162,10 @@ reset:
          * not when booting from ram!
          */
 cpu_init_crit:
-	/*
-	 * flush v4 I/D caches
-	 */
-	mov	r0, #0
-	mcr	p15, 0, r0, c7, c7, 0	/* flush v3/v4 cache */
-	mcr	p15, 0, r0, c8, c7, 0	/* flush v4 TLB */
-
-	/*
-	 * disable MMU stuff and caches
-	 */
-	mrc	p15, 0, r0, c1, c0, 0
-	bic	r0, r0, #0x00002300	@ clear bits 13, 9:8 (--V- --RS)
-	bic	r0, r0, #0x00000087	@ clear bits 7, 2:0 (B--- -CAM)
-	orr	r0, r0, #0x00000002	@ set bit 2 (A) Align
-	orr	r0, r0, #0x00001000	@ set bit 12 (I) I-Cache
-	mcr	p15, 0, r0, c1, c0, 0
-
 	/* Peri port setup */
 	ldr	r0, =0x70000000
 	orr	r0, r0, #0x13
-    	mcr	p15,0,r0,c15,c2,4       @ 256M(0x70000000-0x7fffffff)
+    mcr	p15,0,r0,c15,c2,4       @ 256M(0x70000000-0x7fffffff)
 
 #ifdef CONFIG_BOOT_ONENAND
 	ldr	r0, =0x70000000		@ onenand controller setup
diff --git a/include/configs/smdk6410.h b/include/configs/smdk6410.h
index a710776..91c3c86 100755
--- a/include/configs/smdk6410.h
+++ b/include/configs/smdk6410.h
@@ -179,7 +179,7 @@
 #include <cmd_confdefs.h>
 
 #define CONFIG_BOOTDELAY	3
-#define CONFIG_BOOTARGS    	"root=/dev/mtdblock3 rootfstype=yaffs2 init=/init console=ttySAC0,115200"
+#define CONFIG_BOOTARGS    	"root=/dev/mtdblock3 rootfstype=yaffs2 init=/init mem=64M console=ttySAC0,115200"
 #define CONFIG_ETHADDR		00:40:5C:26:0A:5B
 #define CONFIG_NETMASK      255.255.255.0
 #define CONFIG_IPADDR		192.168.1.225
@@ -405,7 +405,7 @@
 #define CFG_FLASH_ERASE_TOUT	(5*CFG_HZ) /* Timeout for Flash Erase */
 #define CFG_FLASH_WRITE_TOUT	(5*CFG_HZ) /* Timeout for Flash Write */
 
-#define CFG_ENV_ADDR		0
+#define CFG_ENV_ADDR		0x40000
 #define CFG_ENV_SIZE		0x4000	/* Total Size of Environment Sector */
 
 /*
@@ -419,13 +419,13 @@
 
 /* base address for uboot */
 #ifdef CONFIG_ENABLE_MMU
-#define CFG_UBOOT_BASE		0xc7e00000
+#define CFG_UBOOT_BASE		0xc7c00000
 #else
-#define CFG_UBOOT_BASE		0x57e00000
+#define CFG_UBOOT_BASE		0x57c00000
 #endif
-#define CFG_PHY_UBOOT_BASE	MEMORY_BASE_ADDRESS + 0x7e00000
+#define CFG_PHY_UBOOT_BASE	MEMORY_BASE_ADDRESS + 0x7c00000
 
-#define CFG_ENV_OFFSET		0x0003C000
+#define CFG_ENV_OFFSET		0x7C000
 
 /* NAND configuration */
 #define CFG_MAX_NAND_DEVICE     1
-- 
1.7.0.4

