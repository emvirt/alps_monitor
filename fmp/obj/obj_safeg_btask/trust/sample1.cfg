INCLUDE("target_timer.cfg");
INCLUDE("syssvc/syslog.cfg");
INCLUDE("syssvc/banner.cfg");
INCLUDE("syssvc/serial.cfg");
INCLUDE("syssvc/logtask.cfg");
INCLUDE("target_ipi.cfg");

#include "sample1.h"
CLASS(TCL_1){
	CRE_TSK(TASK1_1, { TA_NULL, 1, task, HIGH_PRIORITY, STACK_SIZE, NULL });
	CRE_TSK(BTASK1, { TA_ACT, 1, btask, LOW_PRIORITY, STACK_SIZE, NULL });
	CRE_TSK(MAIN_TASK, { TA_ACT, 0, main_task, MAIN_PRIORITY, STACK_SIZE, NULL });
}

#if TNUM_PRCID >= 2
CLASS(TCL_2){
	CRE_TSK(TASK2_1, { TA_NULL, 2, task, HIGH_PRIORITY, STACK_SIZE, NULL });
	CRE_TSK(BTASK2, { TA_ACT, 2, btask, LOW_PRIORITY, STACK_SIZE, NULL });
}
#endif /* TNUM_PRCID >= 2 */

#if TNUM_PRCID >= 3
CLASS(TCL_3){
	CRE_TSK(TASK3_1, { TA_NULL, 3, task, HIGH_PRIORITY, STACK_SIZE, NULL });
	CRE_TSK(BTASK3, { TA_ACT, 3, btask, LOW_PRIORITY, STACK_SIZE, NULL });
}
#endif /* TNUM_PRCID >= 3 */

#if TNUM_PRCID >= 4
CLASS(TCL_4){
	CRE_TSK(TASK4_1, { TA_NULL, 4, task, HIGH_PRIORITY, STACK_SIZE, NULL });
	CRE_TSK(BTASK4, { TA_ACT, 4, btask, LOW_PRIORITY, STACK_SIZE, NULL });
}
#endif /* TNUM_PRCID >= 4 */

CLASS(TCL_ADMIN_PRC){
	CRE_CYC(CYCHDR1, { TA_NULL, 0, cyclic_handler, 1000, 0 });
}
