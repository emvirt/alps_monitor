		TOPPERS/FMPカーネル
		SH2A-DUAL(GCC)アーキテクチャ依存部 ユーザーズマニュアル

		対応バージョン: Release 1.1.1
		最終更新: 2010年5月10日

このドキュメントは，TOPPERS/FMPカーネルのSH2A-DUAL(GCC)アーキテクチャ
依存部を使用するために必要な事項を説明するものである．
ターゲット依存の事項は、ターゲット依存部のtarget_user.txtに記載してい
るので、こちらも参照のこと。
また、類似のターゲットプロセッサに移植する際は、アーキテクチャ依存部の
設計メモprc_design.txtも参照のこと。

----------------------------------------------------------------------
 TOPPERS/FMP Kernel
     Toyohashi Open Platform for Embedded Real-Time Systems/
     Advanced Standard Profile Kernel

 Copyright (C) 2008 by Embedded and Real-Time Systems Laboratory
             Graduate School of Information Science, Nagoya Univ., JAPAN
 Copyright (C) 2007-2010 by Industrial Technology Institute,
                                    Miyagi Prefectural Government, JAPAN

 上記著作権者は，以下の(1)〜(4)の条件を満たす場合に限り，本ソフトウェ
 ア（本ソフトウェアを改変したものを含む．以下同じ）を使用・複製・改
 変・再配布（以下，利用と呼ぶ）することを無償で許諾する．
 (1) 本ソフトウェアをソースコードの形で利用する場合には，上記の著作
     権表示，この利用条件および下記の無保証規定が，そのままの形でソー
     スコード中に含まれていること．
 (2) 本ソフトウェアを，ライブラリ形式など，他のソフトウェア開発に使
     用できる形で再配布する場合には，再配布に伴うドキュメント（利用
     者マニュアルなど）に，上記の著作権表示，この利用条件および下記
     の無保証規定を掲載すること．
 (3) 本ソフトウェアを，機器に組み込むなど，他のソフトウェア開発に使
     用できない形で再配布する場合には，次のいずれかの条件を満たすこ
     と．
   (a) 再配布に伴うドキュメント（利用者マニュアルなど）に，上記の著
       作権表示，この利用条件および下記の無保証規定を掲載すること．
   (b) 再配布の形態を，別に定める方法によって，TOPPERSプロジェクトに
       報告すること．
 (4) 本ソフトウェアの利用により直接的または間接的に生じるいかなる損
     害からも，上記著作権者およびTOPPERSプロジェクトを免責すること．
     また，本ソフトウェアのユーザまたはエンドユーザからのいかなる理
     由に基づく請求からも，上記著作権者およびTOPPERSプロジェクトを
     免責すること．

 本ソフトウェアは，無保証で提供されているものである．上記著作権者お
 よびTOPPERSプロジェクトは，本ソフトウェアに関して，特定の使用目的
 に対する適合性も含めて，いかなる保証も行わない．また，本ソフトウェ
 アの利用により直接的または間接的に生じたいかなる損害に関しても，そ
 の責任を負わない．

----------------------------------------------------------------------

(1) 対応しているプロセッサの種類・構成
    ・プロセッサの名称と対応している構成
    　　プロセッサ：SH2A-DUAL
    　　　　　　　　　動作確認はSH2A-DUAL（SH7205）で行っている。
    ・アーキテクチャ略称等
    　　・アーキテクチャ略称 sh2a_dual_gcc
	　　・プロセッサ略称：sh2a_dual
	　　・開発環境略称：gcc
		arch/
			sh2a_dual_gcc/	SH2A-DUAL(GCC)アーキテクチャ依存部
			gcc/			GCC開発環境依存部
			logtrace/		トレースログ記録のサンプルコード
    ・使用するPDIC
		pdic/
			sh/				SHシリーズ用SCIFドライバ
　　・依存している個別パッケージのバージョン番号
		SH2A-DUAL(GCC)アーキテクチャ依存部（バージョン 1.3.2）の個別
		パッケージが依存している個別パッケージと，動作確認を行った
		バージョンは次の通り．

	個別パッケージの名称	バージョン	個別パッケージファイル名
	------------------------------------------------------------------
	ターゲット非依存部		1.1.1		fmp-1.1.1.tar.gz

(2) 使用する開発環境と動作検証した条件（バージョン，オプション等）
    　ターゲット依存部のtarget_user.txtを参照

(3) ターゲット定義事項の規定

(3-1) データ型に関する規定

ターゲット依存のデータ型のサイズは次の通り．
	int_t			32ビット
	long_t			32ビット
	char_t			8ビット
	int_least8_t	8ビット
	void *			32ビット
	intptr_t		32ビット

ターゲット依存のデータ型の有無は次の通り．

	int8_t，uint8_t			あり
	int64_t，uint64_t		あり
	int128_t，uint128_t		なし
	float32_t				あり
	double64_t				あり

(3-2) 割込み処理に関する規定
    ・割込みハンドラ番号と割込み番号の割当て，両者の対応
    　　プロセッサのベクタ番号をそのまま用いる。

    ・割込み優先度の段階数（TMIN_INTPRIの値），その設定方法
    　　デフォルトでは、TMIN_INTPRI=-15としている。（prc_kernel.h）
    　　変更する場合は、target_kernel.hでマクロTMIN_INTPRIを定義する。

    ・dis_intとena_intのサポートの有無，その制限事項
    　　サポートしている。
    　　ASPカーネルのsh12a_gccアーキテクチャ依存部（以下、シングルプロ
    　　セッサ版）から割込み禁止フラグの実装方法を変更したため、シング
    　　ルプロセッサ版にあった制限事項は解消されている。
    　　詳しくは、「SH2A-DUAL(GCC)アーキテクチャ依存部 設計メモ」
    　　prc_design.txtの「●割込み要求禁止フラグ」を参照
    　　　
    ・CFG_INTの制限事項と拡張（ターゲット定義で使用できる割込み属性）
    　　IRQ割込みに関しては，以下の割込み属性を設定可能である．
    　　（内蔵周辺モジュール割込みに対しては設定できない。）
    　　　　・TA_NEGEDGE	ネガティブエッジトリガ
    　　　　・TA_POSEDGE	ポジティブエッジトリガ（SH2Aのみ）
    　　　　・TA_BOTHEDGE	両エッジトリガ（SH2Aのみ）
    　　　　・TA_LOWLEVEL	ローレベルトリガ
    　　
    　　IRQ割込みに対して、割込み属性を設定しない場合、デフォルトで
    　　ローレベルトリガとして設定される。
    　　
    　　IRQ割込みに対して、割込み属性として単にTA_EDGEを設定した場合
    　　（極性を設定しない場合）、ネガティブエッジトリガとして扱う。
    　　
    　　シングルプロセッサ版のCFG_INTの制限事項は解消されている。

    ・カーネル管理外の割込みのサポートの有無，その設定方法
    　　サポートしない
    　　prc_config.hでTOPPERS_SUPPORT_NONKERNEL_INTマクロを定義してい
    　　るが未完成
    ・カーネル管理外の割込みに対してDEF_INH，CFG_INTをサポートするか
    　　サポートしない

    ・カーネル管理外の割込みを受け付けた場合の振舞い
    ・TOPPERS標準割込み処理モデルからの逸脱
    　　・割込みハンドラ入口で必要なIRC操作 i_begin_int()
    　　　　エッジトリガの場合のみ、割込み要求をクリアするのが本則で
    　　　　あるが、トリガ種別（エッジトリガ／レベルトリガ）の判別を
    　　　　行うとオーバーヘッドが大きいので、どちらの場合もクリアし
    　　　　ている。
    　　　　現状では、SH2Aのみ実装されている固有の制限事項である。

(3-3) CPU例外処理に関する規定
    ・CPU例外ハンドラ番号の割当て
    　　プロセッサのベクタ番号をそのまま用いる。
    　　割込みの内，NMI，ユーザーブレーク，H-UDIはCPU例外として扱う．

    ・xsns_xpnの制限事項
    　　CPU例外がタスクコンテキストで発生し，そのタスクがタスク例外処
    　　理ルーチンを実行できる状態であっても，そのタスクがchg_ipm等で
    　　割込み優先度マスクをTMIN_INTPRI（またはそれよりも高い値）に設
    　　定している場合には，trueが返る。
    　　詳細は、設計メモのexc_sense_unlock()の項を参照。

(3-4) 性能評価用システム時刻の参照に関する規定
    ・get_utmのサポートの有無，その制限事項
    　　サポートあり

(3-5) その他
    ・その他の制限事項
　　　　・FPUの扱い
　　　　　　本カーネルではSH2AのFPUはサポートしていない．

　　　　・コントロールレジスタの扱い
　　　　　　本カーネルではグローバルベースレジスタGBR、ジャンプテーブル
　　　　　　ベースレジスタTBRはサポートしていない．

　　　　・一般不当命令例外の扱い
　　　　　　一般不当命令例外の場合は戻り番地を2バイト進める必要がある
　　　　　　が対応していない。

　　　　・CPUロック状態のまま、割込みハンドラからリターンした場合、
　　　　　CPUロックを解除せずに、log_inh_leave()を呼び出してる。
　　　　　（割込み元に戻る直前にCPUロックを解除している。）
　　　　　同様にCPU例外ハンドラがCPUロックフラグを変更したままリターン
　　　　　した場合もCPUロックフラグを復元せずに、log_exc_leave()を呼び
　　　　　出してる。（オーバーヘッドが大きくなるため）

　　　　・IRQ割込み端子の初期化（SH2A固有）
　　　　　　本来はCFG_INTで指定されたIRQ入力端子の初期化をカーネル側で
　　　　　　すべきだが、SH2Aでは、IRQ番号から接続先の端子が一意に決ま
　　　　　　らない（複数の端子から選択できる）ため、IRQ入力端子の初期化
　　　　　　はサポートしていない。（端子番号に依存しない割込みコント
　　　　　　ローラの初期化は行っている。）

    ・その他の拡張機能
    　　・未登録のCPU例外
    　　　　未登録の例外が発生した場合は，prc_config.c で定義されている
    　　　　default_exc_handler() が呼び出される．default_exc_handler()
    　　　　は，発生したCPU例外のベクタ番号をコンソールに出力した後，
    　　　　target_exit() を呼び出す．

    　　・未登録の割込み
    　　　　未登録の割込みが発生した場合は，prc_config.cで定義されている
    　　　　default_int_handler() が呼び出される．default_int_handler()
    　　　　は，発生した割込みの割込み番号をコンソールに出力した後，
    　　　　target_exit() を呼び出す．
    　　　　FMPカーネルの標準的なデフォルトの割込みハンドラ
    　　　　default_int_handler(void)は引数なし（ポーティングガイド
    　　　　porting.txt 「6.6.5 デフォルトの割込みハンドラ」参照）である
    　　　　が、SH2A-DUALアーキテクチャ依存部では、カーネルから割込み番号を
    　　　　引数と渡されることを想定している。

    　　・実行すべきタスクがない場合の割込み待ち
    　　　　ディスパッチャの出口で実行すべきタスクがない(schedtsk==NULL）
    　　　　場合は、sleep命令によってプロセッサを省電力モードに切り替え
    　　　　て割込み待ちをしている。
    　　　　マクロOMIT_POWER_CONTROLを定義すると、省電力モードに切り替
    　　　　えずに割込みを待つ。
    　　　　（prc_support.Sの_dispatcher_2付近を参照）

    　　・Makefileの設定項目
    　　　　・USE_BANKED_REGマクロ（SH2A固有）
    　　　　　　USE_BANKED_REGマクロが定義されると、割込みの出入口処理
    　　　　　　でレジスタバンクを使用する。
    　　　　　　定義場所：Makefile.sh2a　15行目付近
    　　　　　　　　　　　　CDEFS := $(CDEFS) -DUSE_BANKED_REG

(4) メモリマップ
    ・デフォルトのメモリマップ，その変更方法
    　　ターゲット依存部のtarget_user.txtを参照

(5) タイマドライバ関連の情報
    ・タイムティックの周期，その変更方法
    ・使用するリソース（タイマ）
    　　ターゲット依存部のtarget_user.txtを参照

(6) シリアルインタフェースドライバの情報
    ・使用するリソース（SIOコントローラ）
    　　ターゲット依存部のtarget_user.txtを参照

(7) システムログ機能の情報
    ・システムログの低レベル出力の実現方法
    　　ターゲット依存部のtarget_user.txtを参照

(8) システム構築手順
    　　ターゲット依存部のtarget_user.txtを参照

(9) ターゲットシステム固有の注意事項
    ・タスクコンテキストに含まれるレジスタ，含まれないレジスタ
 	　　以下のレジスタがタスクコンテキストに含まれる．
	  　　・プログラムカウンタ（PC）
	  　　・スタックレジスタ（R15）

(10) 類似のターゲットにポーティングする開発者向けの参考情報
　　　　アーキテクチャ依存部の設計メモprc_design.txtを参照


(11) ディレクトリ構成・ファイル構成

 	arch/sh2a_dual_gcc/			SH2A-DUAL(GCC)アーキテクチャ依存部
		Makefile.prc			Makefileのアーキテクチャ依存部
		prc_stddef.h			t_stddef.hのアーキテクチャ依存部
		prc_sil.h				sil.hのアーキテクチャ依存部
		prc_kernel.h			kernel.hのアーキテクチャ依存部
		prc_syssvc.h			kernel_syssvc.hのアーキテクチャ依存部
		prc_config.h			カーネル実装のアーキテクチャ依存部
		prc_config.c			カーネル実装のアーキテクチャ依存部関連
								の定義
		prc_support.S			カーネル実装のアーキテクチャ依存部関連
								の定義（アセンブリ言語）
		prc_ipi.cfg				プロセッサ間割込みハンドラドライバの
								システムコンフィギュレーションファイル
		prc_ipi.h				プロセッサ間割込みハンドラドライバの
								ヘッダファイル
								カーネルのみからインクルードされる．
		prc_pcb.h				pcb.hのアーキテクチャ依存部
		prc_rename.def			アーキテクチャ依存部の内部識別名のリネー
								ム定義
		prc_rename.h			アーキテクチャ依存部の内部識別名のリネー
								ム
		prc_unrename.h			アーキテクチャ依存部の内部識別名のリネー
								ム解除
		prc_timer.cfg			タイマドライバのコンフィギュレーション
								ファイル
		prc_timer.h				タイマドライバを使用するための定義
		prc_timer.c				タイマドライバ
		prc_def.csv				コンフィギュレータの値取得シンボルテー
								ブルのアーキテクチャ依存部
		prc.tf					kernel.tfのアーキテクチャ依存部
		prc_check.tf			kernel_check.tfのアーキテクチャ依存部
		prc_cfg1_out.h			cfg1_out.cのリンクに必要なスタブの定義
		prc_test.h				テストプログラムのアーキテクチャ依存
								定義
		prc_insn.h				アーキテクチャの特殊命令のインライン
								関数定義
		start.S					スタートアップルーチン
		makeoffset.c			オフセット生成用ファイル
		shelf.ld				リンクスクリプト

		Makefile.sh2a_dual		Makefileのコア依存部（SH2A-DUAL用）
		sh2a_dual.tf			kernel.tfのコア依存部（SH2A-DUAL用）
		sh2a_dual_config.h		コア依存モジュール（SH2A-DUAL用）
		sh7205.tf				kernel.tfのチップ依存部（SH7205用）
		sh7205.h				SH7205のハードウェア資源の定義
		sh7205_config.h			チップ依存モジュール（SH7205用）

		prc_user.txt			アーキテクチャ依存部のユーザーズマニュ
								アル
		prc_design.txt			アーキテクチャ依存部の設計メモ
		MANIFEST				個別パッケージのファイルリスト

	pdic/sh/				　SH SCIF用 簡易SIOドライバ
		sh_sci.h				SCIFドライバの定義
		sh_sci.c				SCIFドライバ本体

(12) バージョン履歴

'10/05/10  Release1.1.1
　・SH2A-DUAL(GCC)アーキテクチャ依存部 最初のリリース

'09/09/30 
　・割込み／CPU例外の出口処理
　　　戻り先がvector_entryセクションか否かの判定で、境界値の扱いを修正

'09/09/29 
　・割込みの出口処理
　　　多重割込みの際、CPUロック状態のまま、割込みハンドラからリターン
　　　し、戻り先がvector_entryセクション（割込みの入口処理）の場合、
　　　カーネル側でCPUロック解除する処理が抜けていた問題を修正
　・CPU例外の出口処理
　　　・スタックフレームの整合性がとれていない問題を修正
　　　・スタックに積まれた戻り番地へのオフセットSP_PC_OFFSET_EXCの
　　　　値が正しくない問題を修正
　・movml/movmu命令の使用箇所
　　　・レジスタバンクの有無と関係ない箇所を、#ifdef USE_BANKED_REG
　　　　から#ifdef TOPPERS_SUPPORT_SH2A_INSTRUCTIONに修正
　　　・CPU例外の出口処理でもmovml命令を使用するよう修正

'09/07/28 
　・未登録のCPU例外の（CPU例外要因毎の）入口処理から呼ばれる
　　共通の処理_default_exc_handler_entryを追加
　・未登録の割込みの（割込み要因毎の）入口処理から共通の処理
　　_default_int_handler_entryが呼ばれていない不具合を修正
　・デフォルトの割込みハンドラdefault_int_handlerに引数が正しく
　　渡っていない不具合を修正
　　　・default_int_handlerのAPIを変更（引数を割込み番号に）
　　　    void default_int_handler(INTNO intno)
　・未登録の割込み／CPU例外の入口処理がvector_entryセクションに
　　入っていない不具合を修正。

'09/05/01 
　・レジスタバンク・オーバーフロー例外を許可

ここで、シングルプロセッサ版から分岐

'09/04/23 
　・dis_int/ena_int/CFG_INTの制限事項を追記

'09/04/10 
　・ldc命令がスロット不当命令になるプロセッサのために
　　TOPPERS_LDC_IS_SLOT_ILLEGAL_INSTRUCTIONマクロを新設

'09/04/07 
　・USE_BANKED_REGマクロの説明を追記

'09/04/03 
　・テーブルint_iipm_tbl[]
　　　マジックナンバー0x80をNOT_CFG_INT_BITマクロと定義
　・INTNO_IRQをINTNO_IS_IRQにリネーム
　・i_begin_int()の制限事項を追加

'09/04/02 
　・割込み番号，割込みハンドラ番号，CPU例外ハンドラ番号および
　　IRQ割込みの割込み番号の最小値／最大値の定義
　　　・値取得シンボルテーブル経由で取得するよう変更
　　　　　（インクルードファイルとテンプレートファイルで同じ定義を
　　　　　　二重に持たない。）
　　　・これに伴い、EXCNO_RANGE、INTNO_RANGE、INHNO_RANGEの定義を
　　　　shxxxx.tfからprc.tfに移動
　・set_irc_ipr()
　　　shx_config.hからprc_config.hへ移動
　・i_begin_int()
　　　prc_config.hからshx_config.hへ移動
　・init_irc(), set_irc_ipr()
　　　それぞれirc_initialize(),irc_set_ipr()にリネーム
　・sh7205.h
　　　target_support.Sで使用するレジスタ定義を追加
　　　　・ピンファンクションコントローラ
　　　　・バスステートコントローラ（BSC）
　　　　・クロックパルス発振器（CPG）
　　　　・低消費電力モード関連
 
'09/03/30 
　・default_exc_handler
　　　CPU例外発生時のスタックポインタの値を表示するよう修正
　・log_exc_enter/log_exc_leave
　　　割込みを許可してから呼び出すよう修正
　　　log_exc_leaveを使用しなくても、引数を退避／復元していたのを削除

'09/03/27 
　・割込み属性の設定処理の見直し
　　・TA_BOTHEDGE、TA_LOWLEVELの処理を追加
　　・sh2a.tf(kernel.tfのSH2Aコア依存部)を新設
　　・ドキュメント整備
　　　　・デフォルトの処理を「(3-2) 割込み処理に関する規定」に記述
　・x_define_exc()にCPU例外番号のエラーチェックを追加
　・ユーザーズマニュアルから設計メモを分離
　・コピーライトを追加

'09/03/25 
　・Makefile.prcにprc_check.tf（パス３）の依存関係を追記
　・変数lock_flag、saved_iipmのvolatile修飾を削除

'09/03/24 
　・Makefile.prcからコア依存部を分離し、Makefile.sh2aを新設
　・パス２で生成する割込みの出入口処理を
　　　・C言語ソースkernel_cfg.cのインラインアセンブラ
　　から
　　　・通常のアセンブリ・ソースファイルkernel_cfg_asm.S
　　に変更。
　・USE_BANKED_REGの定義をsh7211_config.hからMakefile.sh2aに移動
　・使用できる命令セットの定義
　　　TOPPERS_SUPPORT_SHxx_CODEをTOPPERS_SUPPORT_SHxx_INSTRUCTIONに
　　　リネームし、定義場所をprc_support.Sからsh2a_config.h（コア依存
　　　部）に移動

'09/03/23 
　・チップ依存、コア依存の切り分けの見直し
　　　・割込み番号のマクロ定義箇所
　　　  　INTNO_IRQ0,INTNO_IRQ_MAXをTMIN_INTNO_IRQ,TMAX_INTNO_IRQに
　　　　　リネームし、sh2a_config.hからsh7211_config.hに移動
　　　・IRCの初期化
　　　　　init_irc()をチップ依存部とコア依存部に分離し、それぞれ
　　　　　sh7211_config.hとsh2a_config.hに配置
　　　・prc_config.h　割込み（ハンドラ）番号の内部・外部表現相互変換
　　　　　割込み番号、割込みハンドラ番号の最小値が64に固定されていた
　　　　　箇所をチップ依存部で定義した値を参照するよう修正

'08/05/19 
　・prc_initialize, prc_terminateのシンボルリネームを
　　アーキテクチャ依存部で行うよう変更


以下のRelease番号は追従したASPカーネルの番号を指す。

'08/05/13 Release1.3.1
　・非依存部への追従
　　・スタックサイズのエラーチェックに関する修正
　　　　CHECK_STKSZ_ALIGNの定義をprc.tfに追加

'08/05/12 Release1.3.0
　・シリアルドライバの見直し
　　　処理系依存（shc依存）を#ifdefで切り替えていたのを、
　　　target_syssvc.h経由でインクルード方法に変更し、
　　　任意の処理系に対応できるよう修正

'08/03/13 Release1.1.2
　・HEW版と同期

　・prc.tf
　　　「異なる割込み要求ラインに対して，同一の割込み優先度しか
　　　設定できないケース」のエラーチェックでエラー種別（E_PAR）を
　　　表示していない不具合を修正
　・sh7211_config.h
　　　x_config_intatr
　　　　ICR1レジスタに32ビットアクセスしていた不具合を16ビット
　　　　アクセスに修正
　・prc_support.S
　　・SH2A用命令の積極的利用
　　・ログトレース関数log_inh_leave、log_exc_leaveを呼び出さない場合も
　　　スタックエリアに無駄なアクセスが発生していた点を修正
　　・遅延スロットの見直し。
　・デフォルトのCPU例外ハンドラ
　　・例外要因を表示するよう修正
　　・r0〜r7の値を表示するよう修正
　・sh2a_config.hを新設
　　　sh2aファミリで共通の定義をsh7211_cnfig.hからこちらに移動
　・なるべく32ビットデータとして処理するよう、全体を見直し。
　　　→プログラムサイズを80バイト改善
　　　・saved_iipmを32ビットに

　・シリアルドライバ
　　・sh_scif_init_siopinib
　　　シリアルステータスレジスタSCFSRを4バイトアクセスしていた
　　　不具合を修正
　　・void sh_scif_init(uint8_t portno)
　　 　→void sh_scif_init(ID portid)
　　　　　不要な命令を少なくするため
　　・スコープの見直し
　　　　・配列siopinib_tableをstatic変数に変更
　　　　・配列siopcb_tableをstatic変数に変更
　　　　・関数sh_scif_init_siopinibをstatic関数に変更


'08/02/05 Release1.1.1
　シリアルドライバ
　　　（バナー表示からシステムログに切り替わる際）
　　二重に初期化される不具合を修正
　　ポート番号毎に個別に割込み禁止／許可するように修正
　CFG_INTのエラーチェックを追加
　　　同じ割込み優先度になるべき割込み番号のチェック
　prc_support.S
　  ・bt/s命令の遅延スロットにスロット不当命令が入っていた不具合を修正
　  ・コメントの修正
　sh7211.h
　　・sil.hをインクルードする必要はないので、削除
