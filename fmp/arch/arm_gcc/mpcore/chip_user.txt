=====================================================================
                        MPCore依存部マニュアル
                                  Last Modified: 2010 Apr 21 22:05:47
=====================================================================

○概要

MPCore依存部は，ARM社のMPCoreをターゲットとしている．現状はARM11MPCore
のみをサポートしている．


○カーネルの使用リソース

プロセッサ毎にカーネルは以下のリソースを使用する．

●コア内蔵タイマ

カーネルのティックとして用いる．

●0番のプロセッサ間割込み

DICの割込み番号0のプロセッサ間割込みをプロセッサ間のディスパッチ要求の
ために用いる．ディスパッチ用のプロセッサ間割込みハンドラのバイパス処理
を用いる場合には，DICの割込み番号1のプロセッサ間割込みも使用する．

●Thread ID レジスタ（Privileged Only Thread and Process ID Register）

自プロセッサのPCBアクセスを効率化するため，PCBへのポインタを格納する．
使用しない場合は，chip_pcb.h の USE_THREAD_ID_PCB の定義を無効にするこ
と．

●SCUカウンタMN0

性能評価用にSCUカウンタのMN0を用いる．


○割込み処理関係

割込みはDICを用いて扱う．

●割込みハンドラ番号と割込み番号

DICで割付けられている番号を割込みハンドラ番号及び割込み番号とする．コ
アに割り付けられるローカルな割込みに関しては，上位ビットで割り付けられ
ているコアのビットを入れることで，識別する．グローバルな割込みは，上位
ビットが0xfとなっている．

●割込み優先度の最小値と最大値

割込み優先度の最小値は-15であり，最大値は-1である．

●dis_int/ena_int のサポート

dis_int/ena_intをサポートしている．

●カーネル管理外の割込みサポート

カーネル管理外の割込みはサポートしていない．


○性能評価用システム時刻の参照

コア内蔵タイマによる get_utm をサポートしている．


○チップ依存のマスタプロセッサ用初期化ルーチン

カーネル起動時に str_ker() の実行前に呼び出されるルーチンとして，
chip_mprc_initialize() があり，以下の初期化を行う．

●DICの初期化

DICを一旦無効にして，全ての割込みを禁止した上で，ペンディングビットを
クリアした後，有効にする．

●SCUの初期化

SCUを有効にして，全てのコアのモードをNORMALとする．

●SILのスピンロック用変数の初期化

SILのスピンロック関数を有効にするため，スピンロック変数を有効にする．


○チップ依存の初期化ルーチン

チップ依存の初期化ルーチンとして，chip_initialize()があり，以下の初期
化を行う．

●Thread ID レジスタの初期化
  
自プロセッサのPCBへのポインタを設定する．

●ARM依存部の初期化ルーチンの呼び出し

ARM依存部の初期化ルーチンである，core_initialize()を呼び出す．

●MMUの初期化

MMUを初期化して，ページテーブルを以下の設定で1つ作成する．

  ・全セクションを物理アドレス = 仮想アドレス
  ・ノンキャッシャブル，ノンバッファブルとする 

●SMPモードに設定する

キャッシュとTLVをクリアした後，プロセッサをSMPモードとする．

●キャッシュを有効に

IキャッシュとDキャッシュの両方を有効にする．

●DICのCPUインタフェースを有効に

プロセッサの割込み優先度を最低優先度とし，割込み優先度の全ビットを有効
にして，EOIによりペンディングしている割込みをクリアする．


○チップ依存の終了処理ルーチン

チップ依存の初期化ルーチンであるchip_exit()では，以下の終了処理を行う．

●ARM依存部の終了処理ルーチンの呼び出し

ARM依存部の終了処理ルーチンである，core_exit()を呼び出す．

●DICのCPUインタフェースを停止する

●DICのDISインタフェースの停止


○性能評価用カウンタ用ルーチン

プロセッサを跨ぐ時間を計測するために，SCUのMN0カウンタを用いた計測ルー
チンを用意している．カウントはCPUクロックで行われる．

  void scu_counter_init(void); //カウンターの初期化

  void scu_counter_reset(void) //カウンター値のリセット

  void scu_counter_get_current(void) //カウンター値の取得


○SIL関連

MPCore依存部では，SILのスピンロック取得・解放ルーチンを提供する．スピ
ンロックで用いる変数は，チップ依存のマスタプロセッサ用初期化ルーチン
（chip_mprc_initialize()）で初期化している．


=====================================================================
                ターゲット依存部開発者向けの情報
=====================================================================
○アーキテクチャ指定

アーキテクチャを次のマクロで指定する．

__TARGET_ARCH_ARM

ARM11 MPCore (ARMv6)を用いる場合は，6に定義し，Cortex-A9 MPCore (ARMv7) 
を用いる場合は，7に定義する．

また，ターゲットの.tfファイルで，ARM11 MPCore (ARMv6)を用いる場合は，
arm11_mpcore.tfをインクルードし，Cortex-A9 MPCore (ARMv7) を用いる場合
は，ca9_mpcore.tfをインクルードする．

○マスタプロセッサの指定

マスタプロセッサのプロセッサIDを次のマクロで指定する．

  TMPRC_INDEX

○コア内蔵ペリフェラルのベースアドレスを次のマクロで指定する．

  MPCORE_PMR_BASE

○MMUの初期化ルーチン

MMUの基本的な初期化の終了後，ターゲット依存で行いたいMMUの初期化処理を
以下の関数に記述する．

  void target_mmu_init(void)

MPCore依存部では，MMUの初期化用の関数として次の関数を提供する

  void mmu_map_memory(MEMORY_ATTRIBUTE *m_attribute);

引数のMEMORY_ATTRIBUTE は設定したいメモリ領域のサイズやキャッシュの有
効無効等を設定する．
    
	typedef struct{
		uintptr_t   va;
		uintptr_t   pa;
		uint32_t    size;
		uint8_t     s;
		uint8_t     tex;
		uint8_t     ap;
		uint8_t     c;
		uint8_t     b;
	}MEMORY_ATTRIBUTE;

○chip_mprc_initialize()の呼び出し

target_mprc_initialize()からの呼び出すこと．

○chip_initialize()の呼び出し

target_initialize()からの呼び出すこと．


=====================================================================
                             変更履歴
=====================================================================
2010/04/21
・プロセッサ3/4用のタイマの割込み番号の上位ビットをプロセッサIDのマス
  クからプロセッサIDに修正．

2010/02/26
・Coretex-A9 MPCore のサポート
  __TARGET_ARCH_ARM マクロで切り替え．

2010/02/16
・グローバルタイマ方式時にタイマ割込みをTCL_ADMIN_PRC（クラスID 5）に
  属するように変更．

2010/01/27
・ロック変数の型(LOCK)の定義をtypedefに変更．
・スピンロックの型(SPNLOCK)の定義をtypedefに変更．

2009/11/27
・スピンロック失敗時に割込みを許可してwfeを実行するように変更．

2009/11/20
・スタートアップルーチンでマスタプロセッサをTOPPERS_MASTER_PRCIDを見て
  判定するように変更．

2009/11/11
・start.Sの追加．ARM標準のsart.Sとは異なり，同期時にsev,wfeを使用する．

2009/11/03
・SIL_LOC_SPNの仕様を変更．
  ロック取得を待つ間は，割込みをマスクしないように変更．

2009/10/16
・アセンブラファイル中の分岐命令を AAPCS推奨に変更．
  mov pc, xx -> bx pc

2009/10/05
 dic_config/dic_set_target/dic_set_priority内でプロセッサ間の排他の実施

2009/09/15
 ディスパッチ用のプロセッサ間割込みハンドラのバイパス処理のサポート
 1.1.0の追従のための変更．
 自プロセッサのPCBへのアクセスを効率化するため，PCBへのポインタを 
 Thread ID レジスタへ格納．

2009/07/14
 CPUEXC3 と CPUEXC4 を修正．
 サンプルプログラム用の定義（CPUEXC1...） をターゲット依存部に異動

2009/05/14
 INTHDR_ENTRY() でextern宣言を出力しないように変更．

2009/02/03
 マニュアルの整備．

2009/01/26
 共通部とのインタフェースの変更により，関数名を変更．

2008/09/11
 CP15_DATA_SYNC_BARRIER()/CP15_INVALIDATE_UNIFIED_TLB() : mpcore.h
   インラインアセンブラマクロを修正．

2008/08/04
 x_config_int() : chip_config.c
   ローカル割込みの場合，割込み対処プロセッサに自プロセッサが含まれて
   いるかチェックする．

以上．
